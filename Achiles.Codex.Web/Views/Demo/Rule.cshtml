@model Achiles.Codex.Web.Models.CodexItemModel<Achiles.Codex.Model.Rule>

@if (Model.IsNew)
{
    <h2>New Rule</h2>
}
else
{
    <h2>Edit rule <em>@(Model.CodexItem.Name ?? "<new rule>") </em></h2>
}

<ul class="nav nav-tabs">
    <li class="active"><a href="#basic-info" data-toggle="tab">Basic information</a></li>
    <li ><a href="#article" data-toggle="tab">Article</a></li>
</ul>
<br/>
@Html.ValidationSummary(false)

@using ((Html.BeginForm()))
{
    <div class="tab-content">
        <div class="tab-pane fade in active" id="basic-info">
            @Html.Partial("_EditCodexItemBasicInfoView", Model.CodexItem)
        </div>
        <div class="tab-pane fade in" id="article">
            @Html.Partial("_EditCodexItemArticleView", Model.CodexItem)
        </div>
    </div>
    <hr/>
    <div class="btn-group">
    <button type="submit" class="btn btn-primary">Save article</button>
    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
        <span class="caret"></span>
        <span class="sr-only">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu" role="menu">
        <li><a href="#">Save and create new</a></li>
        <li><a href="#">Save and return to list</a></li>
        <li class="divider"></li>
        <li><a href="#">Save and do something unexpected</a></li>
    </ul>
</div>

}

@section Head
{
    @Styles.Render("~/Content/edit-codex-item-basic-info")
    @Styles.Render("~/Content/edit-codex-item-article")
        
}

@section scripts
{
    @Scripts.Render("~/bundles/edit-codex-item-basic-info")
    @Scripts.Render("~/bundles/edit-codex-item-article")

    @Scripts.Render("~/Scripts/handlebars-1.1.2.js")

    <script type="text/javascript">
        var T = {};
        T.compile = function (template) {
            var compile = Handlebars.compile(template),
                render = {
                    render: function (ctx) {
                        return compile(ctx);
                    }
                };
            return render;
        };
        $('#RelatedItems').tagsinput();
        var input = $('#RelatedItems').tagsinput('input');

        input.typeahead([
            {
                limit: 10,
                name: 'items',
                valueKey: 'Name',
                remote: '@Url.Action("Find", "Codex")/%QUERY',
                template: '<strong>{{Name}}</strong><br/>{{Id}}',
                engine: T,
            }
        ]);

    </script>
}
