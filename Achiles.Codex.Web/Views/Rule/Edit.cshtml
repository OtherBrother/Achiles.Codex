@model Achilles.Codex.Web.Models.CodexItemModel<Achilles.Codex.Model.Rule>

@if (Model.IsNew)
{
<h2>New Rule</h2>
}
else
{
    <h2> Edit Rule <em>@(Model.CodexItem.Name ?? "<new Rule>") </em> </h2>
}

<ul class="nav nav-tabs">
    <li class="active"><a href="#basic-info" data-toggle="tab">Basic information</a></li>
    <li><a href="#article" data-toggle="tab">Article</a></li>
</ul>
<br />
@Html.ValidationSummary(false)

@using ((Html.BeginForm()))
{
    <div class="tab-content">
        <div class="tab-pane fade in active" id="basic-info">
            @Html.Partial("_EditCodexItemBasicInfoView", Model)
            @foreach (var value in Enum.GetValues(typeof(Achilles.Codex.Model.Gear)))
            {
                @Html.RadioButtonFor(m => m, value)
                @Html.Label(value.ToString())
            }
            @*TO DO: create enum for non-combat and combat gear*@
        </div>
        <div class="tab-pane fade in" id="article">
            @Html.Partial("_EditCodexItemArticleView", Model)
        </div>
    </div>
    <hr />
 <div class="btn-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-default" onclick="history.go(-1);">Back</button>
    </div>
}


@section Head
{
    @Styles.Render("~/Content/edit-codex-item-basic-info")
    @Styles.Render("~/Content/edit-codex-item-article")
}

@section scripts
{
    @Scripts.Render("//tinymce.cachefly.net/4.0/tinymce.min.js")

    @Scripts.Render("~/bundles/edit-codex-item-basic-info")
    @Scripts.Render("~/bundles/edit-codex-item-article")

}
